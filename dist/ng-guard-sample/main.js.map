{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/sample-auth/sample-auth.component.ts","./src/app/sample-noauth/sample-noauth.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from 'src/app/login/login.component';\nimport { SampleNoauthComponent } from './sample-noauth/sample-noauth.component';\nimport { SampleAuthComponent } from './sample-auth/sample-auth.component';\nimport { AuthGuard } from './auth/auth.guard';\n\n\nconst routes: Routes = [\n    { path: 'login', component: LoginComponent },\n    { path: 'no-auth', component: SampleNoauthComponent },\n    { path: 'auth', component: SampleAuthComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-root',\n    template: `\n        <h1>angular guard sample</h1>\n        <p><button *ngIf=\"(login$ | async)\" (click)=\"logout()\">로그아웃</button></p>\n        <ul>\n            <li><a routerLink=\"/login\">로그인</a></li>\n            <li><a routerLink=\"/auth\">로그인 필요 페이지</a></li>\n            <li><a routerLink=\"/no-auth\">로그인 불필요 페이지</a></li>\n        </ul>\n\n        <br/>\n\n        <router-outlet></router-outlet>\n    `\n})\nexport class AppComponent {\n    login$;\n\n    constructor(private auth: AuthService, private router: Router) {\n        this.login$ = auth.login$;\n    }\n\n    logout(): void {\n        this.auth.logout().subscribe(() => {\n            this.router.navigate(['/login']);\n        });\n    }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SampleAuthComponent } from './sample-auth/sample-auth.component';\nimport { SampleNoauthComponent } from './sample-noauth/sample-noauth.component';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        SampleAuthComponent,\n        SampleNoauthComponent,\n        LoginComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private auth: AuthService,\n        private router: Router\n    ) { }\n    canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n        return this.auth.isLogin().pipe(\n            map(result => {\n                if (result.login) {\n                    return true;\n                }\n\n                alert('로그인이 필요합니다');\n                this.router.navigate(['/login']);\n                return false;\n            }),\n            catchError((error) => {\n                alert('로그인이 필요합니다');\n                this.router.navigate(['/login']);\n                return of(false);\n            })\n        );\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of, Observable, BehaviorSubject } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    private loginSubj: BehaviorSubject<boolean> = new BehaviorSubject(false);\n    public login$ = this.loginSubj.asObservable();\n\n\n    constructor(private http: HttpClient) {\n        this.loginSubj.next(localStorage.getItem('token') != null);\n    }\n\n    isLogin(): Observable<{ login: boolean }> {\n        // return this.http.get('serverUrl/checkToken');\n\n        return of({\n            login: this.loginSubj.getValue()\n        });\n    }\n\n    login(info: { id: string, password: string }): Observable<{ login: boolean }> {\n        const { id, password } = info;\n        console.log(`id : ${id}, password : ${password}`);\n\n        return of({\n            login: true,\n            token: 'xxxxxxxxxxxxxxxx'\n        }).pipe(\n            tap(result => {\n                if (result.login) {\n                    localStorage.setItem('token', result.token);\n                } else {\n                    alert('로그인 정보가 일치하지 않습니다.');\n                }\n\n                this.loginSubj.next(result.login);\n            }),\n            map(result => ({ login: result.login }))\n        );\n    }\n\n    logout(): Observable<boolean> {\n        localStorage.removeItem('token');\n        this.loginSubj.next(false);\n\n        return of(true);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n    constructor(private auth: AuthService, private router: Router) { }\n\n    ngOnInit(): void {\n    }\n\n    login(): void {\n        this.auth.login({ id: 'test', password: 'pwd' }).subscribe(result => {\n            if (result.login) {\n                this.router.navigate(['/auth']);\n            }\n        });\n    }\n\n}\n","id : <input type=\"text\" /><br />\npassword : <input type=\"password\" />\n\n<button (click)=\"login()\">로그인</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-sample-auth',\n    template: '<p>sample-auth works!</p>',\n})\nexport class SampleAuthComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-sample-noauth',\n    template: '<p>sample-noauth works!</p>',\n})\nexport class SampleNoauthComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}